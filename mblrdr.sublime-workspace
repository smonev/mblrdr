{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"key",
				"keyName"
			],
			[
				"priv",
				"private_data"
			],
			[
				"cr",
				"cronUrl"
			],
			[
				"feed",
				"feedUrl"
			],
			[
				"curr",
				"currentFolder"
			],
			[
				"loa",
				"loadUrlStateOrDefault"
			],
			[
				"fun",
				"function"
			],
			[
				"me",
				"menuClick"
			],
			[
				"men",
				"menuClick"
			],
			[
				"p",
				"props"
			],
			[
				"ap",
				"AppMenu"
			],
			[
				"App",
				"AppMenu"
			],
			[
				"err",
				"errorString"
			],
			[
				"ar",
				"article_count"
			],
			[
				"mar",
				"markSingleArticleAsRead"
			],
			[
				"pri",
				"private_data"
			],
			[
				"us",
				"username"
			],
			[
				"ins",
				"instanceLevelFeedSettingsCache"
			],
			[
				"a",
				"article_count"
			],
			[
				"ca",
				"cacheKey"
			],
			[
				"use",
				"username"
			],
			[
				"swi",
				"swiperight"
			],
			[
				"ope",
				"openCurrentArticle"
			],
			[
				"mvoe",
				"moveToCurrentArticle"
			],
			[
				"Sett",
				"settings"
			],
			[
				"ena",
				"enableSettings"
			],
			[
				"mark",
				"markReadSettingsFolder"
			],
			[
				"delete",
				"deleteFolderSetting"
			],
			[
				"markRead",
				"markReadSettings"
			],
			[
				"de",
				"debug"
			],
			[
				"saveSettingsWi",
				"saveSettingsWithDelete"
			],
			[
				"add",
				"addNewFeed"
			],
			[
				"fd",
				"fdh"
			],
			[
				"new",
				"newFeed"
			],
			[
				"marg",
				"margin-left"
			],
			[
				"def",
				"default"
			],
			[
				"FeedD",
				"feedDataSettings"
			],
			[
				"http",
				"httpId"
			],
			[
				"htt",
				"httpId"
			],
			[
				"stats",
				"startswith"
			],
			[
				"feedda",
				"feedDataSettings"
			],
			[
				"text",
				"text-decoration"
			],
			[
				"line",
				"lineHeight"
			],
			[
				"or",
				"origlineheight"
			],
			[
				"fa-f",
				"fa-font"
			],
			[
				"font",
				"font-size"
			],
			[
				"arti",
				"articlesList"
			],
			[
				"displa",
				"displayNone"
			],
			[
				"setting",
				"settingType"
			],
			[
				"select",
				"selected"
			],
			[
				"remove",
				"removeClass"
			],
			[
				"last",
				"lastVersion"
			],
			[
				"bu",
				"build"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/js/settings.js",
			"settings":
			{
				"buffer_size": 22324,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/js/shortcuts.js",
			"settings":
			{
				"buffer_size": 9420,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/js/react-settings.js",
			"settings":
			{
				"buffer_size": 3967,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"gr",
				"Grunt"
			],
			[
				"grun",
				"Grunt"
			],
			[
				"grunt",
				"Grunt"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: List Packages"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: gr",
				"Package Control: Discover Packages"
			],
			[
				"gre",
				"Package Control: Remove Package"
			],
			[
				"grin",
				"Grunt: Kill Running Tasks"
			],
			[
				"g",
				"Grunt"
			],
			[
				"grund",
				"Preferences: Grunt - Settings â€“ Default"
			],
			[
				"gru",
				"Grunt"
			],
			[
				"GR",
				"Grunt"
			],
			[
				"packag",
				"Package Control: List Packages"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Preferences: Browse Packages"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/proj/github/mblrdr/src/mblrdr.py",
		"/C/proj/github/mblrdr/src/js/main.js",
		"/C/proj/github/mblrdr/src/js/empty.js",
		"/C/proj/github/mblrdr/src/js/shortcuts.js",
		"/C/proj/github/mblrdr/src/js/react-settings.js",
		"/C/proj/github/mblrdr/src/js/react-main.js",
		"/C/proj/github/mblrdr/src/js/settings.js",
		"/C/proj/github/mblrdr/src/cron.yaml",
		"/C/proj/github/mblrdr/src/app.yaml",
		"/C/proj/github/mblrdr/build/mblrdr.db.py",
		"/C/proj/github/mblrdr/build/mblrdr.py",
		"/C/proj/github/mblrdr/src/1queue.yaml",
		"/C/proj/github/mblrdr/Gruntfile.js",
		"/C/proj/orbrdr/src/js/settings.js",
		"/C/proj/orbrdr/src/js/react-main.js",
		"/C/proj/orbrdr/src/js/react-settings.js",
		"/C/proj/orbrdr/src/html/app.htm",
		"/C/proj/orbrdr/src/mblrdr.py",
		"/C/proj/orbrdr/src/html/hello.htm",
		"/C/proj/orbrdr/src/1queue.yaml",
		"/C/proj/orbrdr/src/cron.yaml",
		"/C/proj/orbrdr/src/compass/_index.scss",
		"/C/proj/orbrdr/Gruntfile.js",
		"/C/proj/orbrdr/src/mblrdr.db.py",
		"/C/proj/orbrdr/src/app.yaml",
		"/C/proj/orbrdr/src/js/shortcuts.js",
		"/C/proj/orbrdr/src/js/main.js",
		"/C/proj/orbrdr/src/appengine_config.py",
		"/C/Users/Irina/AppData/Roaming/Sublime Text 3/Packages/Grunt/SublimeGrunt.sublime-settings",
		"/C/proj/orbrdr/src/compass/_nightmode.scss",
		"/C/proj/orbrdr/src/compass/_settings.scss",
		"/C/proj/orbrdr/src/compass/_responsive.scss",
		"/C/proj/orbrdr/src/compass/_icons.scss",
		"/C/proj/orbrdr/build/app.yaml",
		"/C/proj/orbrdr/build/mblrdr.py",
		"/C/proj/orbrdr/build/html/hello.htm",
		"/C/proj/orbrdr/mblrdr.sublime-workspace",
		"/C/proj/orbrdr/mblrdr.sublime-project",
		"/C/proj/orbrdr/src/compass/main.scss",
		"/C/proj/orbrdr/src/css/main.css",
		"/C/proj/orbrdr/.editorconfig",
		"/C/proj/orbrdr/package.json",
		"/C/proj/orbrdr/src/css/site.css",
		"/C/Users/Irina/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/C/Users/Irina/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/proj/orbrdr/node_modules/grunt-contrib-uglify/node_modules/uglify-js/lib/mozilla-ast.js",
		"/C/proj/orbrdr/build/css/main.css",
		"/C/proj/orbrdr/node_modules/grunt-contrib-uglify/node_modules/uglify-js/node_modules/source-map/build/suffix-source-map.jsm",
		"/C/proj/orbrdr/node_modules/grunt/node_modules/coffee-script/lib/coffee-script/coffee-script.js",
		"/C/proj/orbrdr/build/cron.yaml"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"mblrdr.py",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"300",
			"findNextArticle",
			"next",
			"logging.de",
			"logging.info",
			"loggin",
			"newf",
			"addf",
			"import urllib",
			"create fe",
			"getand",
			"CreateFirstTimeUser",
			"cronfeed",
			"cronfe",
			"incr",
			"inccr",
			"getfeeddatas",
			"increa",
			"rpc.wait()",
			"urlf",
			"quote",
			"cronfeed",
			"loggin",
			"link ",
			"link:",
			"link",
			"\"link",
			"logging.debug",
			"max-a",
			"quote",
			"encode",
			"cronur",
			"heloo",
			"logging.debug",
			"keynam",
			"keyN",
			"is no",
			"feedDataSettings.private_data",
			"Create FeedDataSettings",
			"getFeedData",
			"feedha",
			"cronfeed",
			"cro",
			"GetAndParse",
			"addso",
			"AddSomeData",
			"cronfeed",
			"fetch",
			"urlop",
			"cronur",
			"AddSomeData",
			"Create FeedDataSettings for",
			"newf",
			"newFeed=",
			"createNew",
			"READCOUNT DEBUG",
			"deb",
			"cronf",
			"task",
			"transactional",
			"get_by",
			"ndb",
			"asyn",
			"newf",
			"getNewFeedViaCron",
			"newf",
			"cronfeed",
			"newf",
			"getNewFeedViaCron",
			"cronfeed",
			"adding feed",
			"addNewFeed",
			"SaveSettingsHandler",
			"cronfeed",
			"getNewFeedViaCron",
			"logging",
			"getNewFeedViaCron",
			"cronfeed",
			"getfeeddata",
			"folderName",
			"root",
			"pushs",
			"foldernam",
			"getReadData",
			"star",
			"feeds",
			"nightm",
			"nightmode",
			"state",
			"markReadData[url]",
			"getse",
			"menuButtonClick",
			"closeButtonClick",
			"yes",
			"hidden",
			"hidd",
			"state",
			"onc",
			"oncl",
			"moreLinkCheck",
			"settings.show",
			"settings.sh",
			"show(",
			"sett",
			"hand",
			"enct",
			"fa-c",
			"input ",
			"fa fa-c",
			"deb",
			"UserGist",
			"logging.debug",
			"exce",
			"exc",
			"self.response.out.write",
			"        # for url in urls:\n        #     url = urllib.quote_plus(url)\n        #     url = 'http://' + self.request.host + '/cronfeed/' + url\n        #     rpc = urlfetch.create_rpc() ##deadline=1.0s\n        #     urlfetch.make_fetch_call(rpc, url)\n        #     rpcs.append(rpc)\n        #     resultUrls.append(url)\n\n        #     ##self.response.out.write('<br>' + url)\n\n        # for rpc in rpcs:\n        #     rpc.wait()\n",
			"cronfeed",
			"encode",
			"cronfeeds",
			"queue",
			"taskqueue",
			"urlli",
			"self.req",
			"self.re",
			"== N",
			"is no",
			"GetFeedDataSettings",
			"set"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"logging.debug",
			"logging.info",
			"fds"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/js/settings.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22324,
						"regions":
						{
						},
						"selection":
						[
							[
								915,
								915
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 240.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/js/shortcuts.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9420,
						"regions":
						{
						},
						"selection":
						[
							[
								8047,
								8047
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3282.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/js/react-settings.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3967,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 216.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "mblrdr.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"se",
				"src\\js\\settings.js"
			],
			[
				"mb",
				"src\\mblrdr.py"
			],
			[
				"sh",
				"src\\js\\shortcuts.js"
			],
			[
				"main",
				"src\\js\\main.js"
			],
			[
				"mbl",
				"src\\mblrdr.py"
			],
			[
				"ic",
				"src\\compass\\_icons.scss"
			],
			[
				"sett",
				"src\\js\\settings.js"
			],
			[
				"in",
				"src\\compass\\_index.scss"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 392.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 205.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
